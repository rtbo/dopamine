name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Installation and tests

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        dc: [dmd-latest, ldc-latest]
        meson: ['master']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Start PostgreSQL server Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo systemctl start postgresql.service
          pg_isready

      - name: Start PostgreSQL server Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          $pgService = Get-Service -Name postgresql*
          Set-Service -InputObject $pgService -Status running -StartupType automatic
          Start-Process -FilePath "$env:PGBIN\pg_isready" -Wait -PassThru

      - name: Install Meson
        run: |
          git clone --branch ${{ matrix.meson }} --depth 1 https://github.com/mesonbuild/meson $HOME/meson
          echo "Checked out meson in $HOME/meson"
          cd $HOME/meson
          python setup.py build
          python setup.py install --user
          python -c 'import os,sysconfig;print(sysconfig.get_path("scripts",f"{os.name}_user"))' >> $GITHUB_PATH
        shell: bash

      - name: Test Meson installation
        run: |
          meson --version

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install D Compiler and Dub
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}

      - name: Install Ninja
        uses: urkle/action-get-ninja@v1.0.0

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.12

      - name: Add pkg-config and DLLs to Windows PATH
        if: ${{ matrix.os == 'windows-latest' }}
        run: echo $GITHUB_WORKSPACE/windows-x64/bin >> $GITHUB_PATH
        shell: bash

      - name: Enable MS Developer Command Prompt
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1.7.0

      - name: Install Dub dependencies
        run: |
          dub run dub-build-deep --yes -- vibe-d:http@0.9.4
          dub run dub-build-deep --yes -- unit-threaded:assertions@2.0.3

      - name: Build dopamine
        run: |
          meson setup build -Ddefault_library=static -Denable_server=true -Denable_test=true -Denable_client=true
          meson compile -C build

      - name: Run dopamine tests
        run: meson test --print-errorlogs
        env:
          PGUSER: postgres
        working-directory: build
